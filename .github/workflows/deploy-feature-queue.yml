name: Terraform Feature Queue Deployment

on:
  workflow_dispatch:
     inputs:
        working-directory:
            required: true
            type: choice
            description: terraform workflow directory
            options:
            - "network/shared"
            - "network/spoke"
            - "platform/spoke"
        stage:
            type: choice
            description: Target stage to test against (used by deploy-platform only)
            required: true
            options:
            - "latest"
            - "test"
            - "beta"
            - "prod"
            - "parvati"
        account:
            type: string
            description: Choose any of the known account for stage latest/test 122403041129, beta/prod 794236216820, parvati 331043233042
            required: true
        region:
            type: choice
            description: Choose ap-south-1 for parvati, rest are eu-west-1 region
            required: true
            options:
            - us-east-1
            - eu-west-1
            - ap-south-1
          
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get current commit ID
        run: echo "CURRENT_COMMIT_ID=`git rev-parse ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref || github.ref }}`" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.5.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ inputs.REGION }}

      - name: Provision ECR repo
        run: |
            aws servicecatalog provision-product \
            --provisioned-product-name ${{ github.event.repository.name }}-ecr-repo \
            --provisioning-artifact-name Default \
            --provisioning-parameters '[{"Key": "RepositoryName", "Value": "${{ github.event.repository.name }}"}, {"Key": "CrossAccountAccess", "Value": "enabled"}]' \
            --product-name ECR-Repo \
            --tags '[{"Key": "VantaOwner", "Value": "atul.sharma@peak.ai"}, {"Key": "VantaDescription", "Value": "PeakAI-Infrastructure"},{"Key": "VantaNonProd", "Value": "false"}]'

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Use Node.js LTS
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'

      - name: Get node modules cache
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-lts-install_dependencies-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-lts-install_dependencies-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          context: .
          tags: 821484330928.dkr.ecr.us-east-1.amazonaws.com/${{ github.event.repository.name }}:${{ github.sha }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  deploy-matrix:
      needs: build
      strategy:
        matrix:
          features: [uploads]
        max-parallel: 1 
      permissions:
        issues: write
        contents: read
      uses: safwan-1998/safwan-terraform-practise/.github/workflows/terraform-deploy.yml@main
      with:
        working-directory: ${{ inputs.working-directory }}
        stage: ${{ inputs.stage }}
        account: ${{ inputs.account }}
        region: ${{ inputs.region }}
        feature: ${{ matrix.features }}
        ecr-image: 821484330928.dkr.ecr.us-east-1.amazonaws.com/${{ github.event.repository.name }}:${{ github.sha }}
      secrets:
        AWS_ACCESS_KEY_ID_DEV: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY_DEV: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
