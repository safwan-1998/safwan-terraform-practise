name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      working-directory:
        required: true
        type: choice
        description: terraform workflow directory
        options:
          - "network/shared"
          - "network/spoke"
          - "platform/spoke"
      stage:
        type: choice
        description: Target stage to test against (used by deploy-platform only)
        required: true
        options:
          - "latest"
          - "test"
          - "beta"
          - "prod"
          - "parvati"
      account:
        type: string
        description: Choose any of the known account for stage latest/test 122403041129, beta/prod 794236216820, parvati 331043233042
        required: true
      region:
        type: choice
        description: Choose ap-south-1 for parvati, rest are eu-west-1 region
        required: true
        options:
          - us-east-1
          - eu-west-1
          - ap-south-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.0  # Specify the version you're using

    - name: Configure AWS Credentials for target account
      uses: aws-actions/configure-aws-credentials@v1.5.8
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        aws-region: ${{ inputs.REGION }}

    - name: Terraform init
      run: terraform init -backend-config=${{ inputs.stage }}.hcl -upgrade

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform workspace
      id: workspace
      run: terraform workspace select ${{ inputs.stage }} || terraform workspace new ${{ inputs.stage }}

    - name: Terraform plan
      run: terraform plan -input=false -out=tf.plan
      env:
        TF_VAR_region: ${{ inputs.REGION }}
        TF_VAR_service_name: "safwan-terraform"

    - name: Self approval
      if: contains(fromJson('["latest", "test"]'), inputs.stage )
      uses: trstringer/manual-approval@v1.8.0 #Limitation unable to modify Issue Body
      timeout-minutes: 30
      with:
        secret: ${{ github.token }} 
        approvers: ${{ github.actor }}
        minimum-approvals: 1
        exclude-workflow-initiator-as-approver: false
        issue-title: Deploying for stage ${{ inputs.stage }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false tf.plan

    - name: Terraform Done
      run: echo "Terraform applied successfully"
